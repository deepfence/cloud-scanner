AWSTemplateFormatVersion: '2010-09-09'
Description: Deepfence Cloud Scanner - AWS
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Deepfence Configuration
      Parameters:
      - ManagementConsoleURL
      - ManagementConsolePort
      - DeepfenceKey
      - AccountName
      - CloudScannerImage
      - LogLevel
    - Label:
        default: Cluster Configuration
      Parameters:
      - Cluster
      - EnabledCloudRegions
    - Label:
        default: VPC Configuration
      Parameters:
      - VPCName
      - VPCCIDR
      - SubnetCIDR
    - Label:
        default: Use Existing VPC (Optional)
      Parameters:
      - VPC
      - VPCSubnet
      - IG
    - Label:
        default: Task Configuration
      Parameters:
      - TaskIAMRole
      - TaskCPU
      - TaskMemory
      - TaskEphemeralStorage
      - EnableCloudTrailTrails
      - CloudTrailTrails
    ParameterLabels:
      ManagementConsoleURL:
        default: 'Management Console URL. Example: 22.33.44.55 or deepfence.customer.com'
      ManagementConsolePort:
        default: Management Console Port
      DeepfenceKey:
        default: Deepfence API Key
      AccountName:
        default: AWS Account Name (Optional)
      CloudScannerImage:
        default: Cloud Scanner Image
      Cluster:
        default: ECS Cluster Name
      LogLevel:
        default: Log level
      VPCName:
        default: VPC Name
      VPC:
        default: Cloud Scanner VPC ID
      VPCSubnet:
        default: Cloud Scanner Subnet ID
      IG:
        default: Internet Gateway ID
      VPCCIDR:
        default: Cloud Scanner VPC CIDR Block
      SubnetCIDR:
        default: Cloud Scanner Subnet CIDR Block
      TaskIAMRole:
        default: If SecurityAudit role is chosen, cloud scanner may not find configuration issues in some of the AWS resources like WAF. Also updates will happen only once every day.
      TaskCPU:
        default: 'Task CPU Units (Default: 4 vCPU)'
      TaskMemory:
        default: 'Task Memory (Default: 8 GB)'
      TaskEphemeralStorage:
        default: 'Task Ephemeral Storage (Default: 100 GB)'
      EnableCloudTrailTrails:
        default: Enable CloudTrail based updates
      CloudTrailTrails:
        default: CloudTrail ARNs (comma separated) to refresh every hour on changes in the infrastructure
      EnabledCloudRegions:
        default: AWS regions to scan (Optional, all regions enabled by default)
Parameters:
  ManagementConsoleURL:
    Type: String
  ManagementConsolePort:
    Type: String
    Default: '443'
  DeepfenceKey:
    NoEcho: true
    Type: String
  AccountName:
    Type: String
    Description: For easy identification
  CloudScannerImage:
    Default: quay.io/deepfenceio/cloud_scanner_ce:2.5.7
    Type: String
  LogLevel:
    Default: info
    Type: String
    AllowedValues:
    - error
    - warn
    - info
    - debug
    - trace
  Cluster:
    Default: deepfence-cloud-scanner
    Type: String
    Description: Name of Cloud Scanner ECS cluster
  VPCName:
    Default: deepfence-cloud-scanner-vpc
    Type: String
    Description: Name of VPC to be created for cloud scanner to be deployed in
  VPC:
    Type: String
    Description: Existing VPC ID where cloud scanner needs to be deployed
    Default: ''
  VPCSubnet:
    Type: String
    Description: Subnet within existing VPC to be used for cloud scanner deployment
    Default: ''
  VPCCIDR:
    Type: String
    Description: VPC CIDR block to use
    Default: 10.0.0.0/16
  SubnetCIDR:
    Type: String
    Description: Subnet CIDR to use for VPC
    Default: 10.0.0.0/24
  IG:
    Type: String
    Description: Internet Gateway within existing VPC to connect to internet
  TaskIAMRole:
    Type: String
    Description: Task Role
    Default: arn:aws:iam::aws:policy/SecurityAudit
    AllowedValues:
    - arn:aws:iam::aws:policy/SecurityAudit
    - arn:aws:iam::aws:policy/ReadOnlyAccess
  TaskCPU:
    Type: String
    Description: Task CPU Units
    Default: '4096'
  TaskMemory:
    Type: String
    Description: Task Memory (MB)
    Default: '8192'
  TaskEphemeralStorage:
    Type: String
    Description: Ephemeral Storage (GB)
    Default: '100'
  EnableCloudTrailTrails:
    Type: String
    Description: true/false
    Default: false
    AllowedValues:
    - false
    - true
  CloudTrailTrails:
    Type: String
    Description: CloudTrail Trail ARNs (Management events with write-only or read-write). If empty, a trail with management events will be automatically chosen if available.
  EnabledCloudRegions:
    Type: String
    Description: 'Only these regions will be scanned. All other regions will be disabled. Example: us-east-1,us-east-2'
Conditions:
  CreateNewVPC: !Equals
  - !Ref VPC
  - ''
  CreateNewSubnet: !Equals
  - !Ref VPCSubnet
  - ''
Resources:
  CloudScannerVPC:
    Type: AWS::EC2::VPC
    Condition: CreateNewVPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Ref VPCName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Condition: CreateNewVPC
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Condition: CreateNewVPC
    Properties:
      VpcId: !If
      - CreateNewVPC
      - !Ref CloudScannerVPC
      - !Ref VPC
      InternetGatewayId: !If
      - CreateNewVPC
      - !Ref InternetGateway
      - !Ref IG
  SubnetA:
    Type: AWS::EC2::Subnet
    Condition: CreateNewSubnet
    Properties:
      AvailabilityZone: !Select
      - 0
      - !GetAZs ''
      VpcId: !If
      - CreateNewVPC
      - !Ref CloudScannerVPC
      - !Ref VPC
      CidrBlock: !Ref SubnetCIDR
      MapPublicIpOnLaunch: true
  RouteTable:
    Type: AWS::EC2::RouteTable
    Condition: CreateNewSubnet
    Properties:
      VpcId: !If
      - CreateNewVPC
      - !Ref CloudScannerVPC
      - !Ref VPC
  InternetRoute:
    Type: AWS::EC2::Route
    Condition: CreateNewSubnet
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !If
      - CreateNewVPC
      - !Ref InternetGateway
      - !Ref IG
      RouteTableId: !Ref RouteTable
  SubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: CreateNewSubnet
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !If
      - CreateNewSubnet
      - !Ref SubnetA
      - !Ref VPCSubnet
  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: deepfence-cloud-scanner-ecs
      VpcId: !If
      - CreateNewVPC
      - !Ref CloudScannerVPC
      - !Ref VPC
      SecurityGroupEgress:
      - IpProtocol: '-1'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: !Ref Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref Cluster
      Tags:
      - Key: Name
        Value: !Ref Cluster
  CloudScannerLogGroup:
    Type: AWS::Logs::LogGroup
  CloudScannerService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: deepfence-cloud-scanner-ecs-service
      Cluster: !GetAtt ECSCluster.Arn
      DesiredCount: 1
      LaunchType: FARGATE
      PlatformVersion: LATEST
      TaskDefinition: !Ref CloudScannerTaskDefinition
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
          - !GetAtt ContainerSecurityGroup.GroupId
          Subnets:
          - !If
            - CreateNewSubnet
            - !Ref SubnetA
            - !Ref VPCSubnet
      SchedulingStrategy: REPLICA
      Tags:
      - Key: Name
        Value: !Ref Cluster
  CloudScannerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
      - Essential: true
        Image: !Ref CloudScannerImage
        Environment:
        - Name: MGMT_CONSOLE_URL
          Value: !Ref ManagementConsoleURL
        - Name: MGMT_CONSOLE_PORT
          Value: !Ref ManagementConsolePort
        - Name: DEEPFENCE_KEY
          Value: !Ref DeepfenceKey
        - Name: CLOUD_ACCOUNT_NAME
          Value: !Ref AccountName
        - Name: CLOUD_PROVIDER
          Value: aws
        - Name: CLOUD_REGION
          Value: !Ref AWS::Region
        - Name: ENABLED_CLOUD_REGIONS
          Value: !Ref EnabledCloudRegions
        - Name: CLOUD_ACCOUNT_ID
          Value: !Ref AWS::AccountId
        - Name: DEPLOYED_ACCOUNT_ID
          Value: !Ref AWS::AccountId
        - Name: ORGANIZATION_DEPLOYMENT
          Value: 'false'
        - Name: ROLE_NAME
          Value: !Ref AWS::StackName
        - Name: AWS_CREDENTIAL_SOURCE
          Value: EcsContainer
        - Name: CLOUD_AUDIT_LOGS_ENABLED
          Value: !Ref EnableCloudTrailTrails
        - Name: CLOUD_AUDIT_LOG_IDS
          Value: !Ref CloudTrailTrails
        - Name: HTTP_SERVER_REQUIRED
          Value: 'false'
        - Name: SUCCESS_SIGNAL_URL
          Value: ''
        - Name: DF_LOG_LEVEL
          Value: !Ref LogLevel
        - Name: SCAN_INACTIVE_THRESHOLD
          Value: '21600'
        - Name: CLOUD_SCANNER_POLICY
          Value: !Ref TaskIAMRole
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref CloudScannerLogGroup
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: deepfence-cloud-scanner
        Name: deepfence-cloud-scanner-container
      Family: !Join
      - '-'
      - - deepfence
        - !Ref AWS::StackName
      TaskRoleArn: !GetAtt TaskRole.Arn
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      NetworkMode: awsvpc
      RequiresCompatibilities:
      - FARGATE
      Cpu: !Ref TaskCPU
      Memory: !Ref TaskMemory
      EphemeralStorage:
        SizeInGiB: !Ref TaskEphemeralStorage
      Tags:
      - Key: Name
        Value: deepfence-cloud-scanner-task-definition
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Join
      - ''
      - - !Ref AWS::StackName
        - '-execution-role'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      MaxSessionDuration: 3600
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
      - Key: Name
        Value: !Join
        - ''
        - - !Ref AWS::StackName
          - '-execution-role'
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Join
      - ''
      - - !Ref AWS::StackName
      AssumeRolePolicyDocument: '{"Version":"2012-10-17","Statement":[{"Sid":"","Effect":"Allow","Principal":{"Service":"ecs-tasks.amazonaws.com"},"Action":"sts:AssumeRole"}]}'
      MaxSessionDuration: 3600
      ManagedPolicyArns:
      - !Ref TaskIAMRole
      Tags:
      - Key: Name
        Value: !Join
        - ''
        - - !Ref AWS::StackName